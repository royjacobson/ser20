name: ser20 linux ci
on: [push, pull_request]

jobs:
  test_ser20_linux:
    runs-on: ubuntu-22.04
    container: ${{ matrix.CONTAINER }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - CMAKE_OPTIONS: ''
            COMPILER: 'g++-10'
            EXTRA_APT_PACKAGES: 'g++-10'
            CONTAINER: ubuntu:22.04
            NAME: ubuntu-22.04-g++10

          - CMAKE_OPTIONS: ''
            COMPILER: 'g++-12'
            EXTRA_APT_PACKAGES: 'g++-12'
            CONTAINER: ubuntu:22.04
            NAME: ubuntu-22.04-g++12

          - CMAKE_OPTIONS: ''
            COMPILER: 'g++-14'
            EXTRA_APT_PACKAGES: 'g++-14'
            CONTAINER: ubuntu:24.04
            NAME: ubuntu-24.04-g++14

          - CMAKE_OPTIONS: ''
            COMPILER: 'g++-15'
            EXTRA_APT_PACKAGES: 'g++-15'
            CONTAINER: ubuntu:25.04
            NAME: ubuntu-25.04-g++15

          - CMAKE_OPTIONS: ''
            COMPILER: 'clang++-13'
            EXTRA_APT_PACKAGES: 'clang-13'
            CONTAINER: ubuntu:22.04
            NAME: ubuntu-22.04-clang-13

          - CMAKE_OPTIONS: ''
            COMPILER: 'clang++-15'
            EXTRA_APT_PACKAGES: 'clang-15'
            CONTAINER: ubuntu:22.04
            NAME: ubuntu-22.04-clang-15

          - CMAKE_OPTIONS: ''
            COMPILER: 'clang++-16'
            EXTRA_APT_PACKAGES: 'clang-16'
            CONTAINER: ubuntu:24.04
            NAME: ubuntu-24.04-clang-16

          - CMAKE_OPTIONS: ''
            COMPILER: 'clang++-18'
            EXTRA_APT_PACKAGES: 'clang-18'
            CONTAINER: ubuntu:24.04
            NAME: ubuntu-24.04-clang-18

    name: ${{ matrix.NAME }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: install deps and test
      shell: bash
      env:
        CMAKE_OPTIONS: ${{ matrix.CMAKE_OPTIONS }}
        COMPILER: ${{ matrix.COMPILER }}
        EXTRA_APT_PACKAGES: ${{ matrix.EXTRA_APT_PACKAGES }}
        LLVM_APT_SOURCE: ${{ matrix.LLVM_APT_SOURCE }}
      run: |
        set -ex
        apt-get update -y
        DEBIAN_FRONTEND=noninteractive TZ=America/Los_Angeles apt-get install -y software-properties-common wget python3-pip make apt-transport-https

        if [[ "${LLVM_APT_SOURCE}" != "" ]]; then
          wget -qO - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
          add-apt-repository "${LLVM_APT_SOURCE}"
        fi

        apt-get update -y

        # Install apt packages
        apt-get install libboost-serialization-dev libboost-dev ${EXTRA_APT_PACKAGES} -y
        pip3 install cmake

        # Set compiler and env variables
        export CXX=${COMPILER}
        ${CXX} --version

        # Build ser20 and test
        cmake --version
        mkdir build && cd build
        cmake ${CMAKE_OPTIONS} .. && make -j4 VERBOSE=1
        ctest . --output-on-failure
